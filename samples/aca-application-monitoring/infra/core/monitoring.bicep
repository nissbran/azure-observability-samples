param location string = resourceGroup().location
param name string

resource loganalytics_workspace 'Microsoft.OperationalInsights/workspaces@2023-09-01' = {
  name: 'logs${name}'
  location: location
  properties: {
    sku: {
      name: 'PerGB2018'
    }
    retentionInDays: 30
  }
}

resource appinsights 'Microsoft.Insights/components@2020-02-02' = {
  name: 'appinsights${name}'
  kind: 'web'
  location: location
  properties: {
    Application_Type: 'web'
    WorkspaceResourceId: loganalytics_workspace.id
  }
}

resource grafana 'Microsoft.Dashboard/grafana@2023-09-01' = {
  name: 'grafana${name}'
  location: location
  identity: {
    type: 'SystemAssigned'
  }
  sku: {
    name: 'Standard'
  }
  properties: {
    autoGeneratedDomainNameLabelScope: 'TenantReuse'
    publicNetworkAccess: 'Enabled'
  }
}

module monitorRbacAssignment 'assign-monitor-reader.bicep' = {
  scope: subscription()
  name: '${grafana.name}-monitor-reader'
  params: {
    grafanaName: grafana.name
    grafanaPrincipalId: grafana.identity.principalId
  }
}

resource dcr_workspace_transforms 'Microsoft.Insights/dataCollectionRules@2023-03-11' = {
  name: 'dcr-workspace-transforms'
  location: location
  kind: 'WorkspaceTransforms'
  properties: {
    dataSources: {}
    destinations: {
      logAnalytics: [
        {
          workspaceResourceId: loganalytics_workspace.id
          name: 'gateway-logs-workspace'
        }
      ]
    }
    dataFlows: [
      {
        streams: [
          'Microsoft-Table-ApiManagementGatewayLogs'
        ]
        destinations: [
          'gateway-logs-workspace'
        ]
        transformKql: 'source\n| where ApimSubscriptionId != \'appinsights-health\'\n'
      }
    ]
  }
}

output appinsightsName string = appinsights.name
output workspaceId string = loganalytics_workspace.id
